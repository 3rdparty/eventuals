#!/bin/bash

# Check for existence of git.
which git >/dev/null
if [[ $? != 0 ]]; then
  printf "Failed to find 'git' (please install or update your path)\n"
  exit 1
fi

# Check for existence of clang-format
which clang-format >/dev/null
if [[ $? != 0 ]]; then
  printf "Failed to find 'clang-format' (please install or update your path)\n"
  exit 1
fi

# Returns 0 if the version in the first argument is greater than or
# equal to the version in the second argument, otherwise returns 1.
check_version() {
  local found="$1"
  local required="$2"

  # Use 'sort -V' in order to sort the versions and select the "oldest".
  local oldest="$(printf '%s\n' "${found}" "${required}" | sort -V | head -n1)"

  # Ensure the "oldest" of the two versions is what's required.
  [[ "${oldest}" == "${required}" ]]
}

# Check version of clang-format.
clang_format_version_found="$(clang-format --version | head -n1 | cut -d" " -f3)"
clang_format_version_required="12.0.0"

check_version ${clang_format_version_found} ${clang_format_version_required}

if [[ $? != 0 ]]; then
  printf "clang-format version '%s' is required but found '%s'\n" \
    "${clang_format_version_required}" \
    "${clang_format_version_found}"
  exit 1
fi

# Get top-level directory so we can look for .clang-format file.
directory=$(git rev-parse --show-toplevel)

# Check for .clang-format file.
if [[ ! -f "${directory}/.clang-format" ]]; then
  printf "Failed to find '.clang-format' file at '%s'\n" "${directory}"
  exit 1
fi

case "$1" in
  --help )
    echo "Performs checks on files to be committed"
    ;;
  * )
    files=`git diff-index --cached --name-only HEAD | grep -iE '\.(cc|h)$'`
    for file in ${files}; do
      # Check file is formatted correctly.
      clang-format --dry-run -Werror --ferror-limit=0  ${file}
      if [ $? != 0 ]; then
        exit 1
      fi
      # TODO: add more pre-commit checks here ...
    done
    ;;
esac
