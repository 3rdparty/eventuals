load("@bazel_skylib//rules:build_test.bzl", "build_test")

# NOTE: instead of 'cc_grpc_library' from '@com_github_grpc_grpc'
# could also use 'cpp_grpc_library' from '@rules_proto_grpc'.
load("@com_github_grpc_grpc//bazel:cc_grpc_library.bzl", "cc_grpc_library")
load("@rules_cc//cc:defs.bzl", "cc_library", "cc_proto_library")
load("@rules_proto//proto:defs.bzl", "proto_library")
load("//bazel:cc_eventuals_library.bzl", "cc_eventuals_library")
load("//bazel:copts.bzl", "copts")

proto_library(
    name = "sample_service_proto",
    testonly = True,
    srcs = [":sample_service.proto"],
)

cc_proto_library(
    name = "sample_service_cc_proto",
    testonly = True,
    deps = [":sample_service_proto"],
)

cc_grpc_library(
    name = "sample_service_grpc",
    testonly = True,
    srcs = [":sample_service_proto"],
    grpc_only = True,
    deps = [
        ":sample_service_cc_proto",
        "@com_github_grpc_grpc//:grpc++",
    ],
)

cc_eventuals_library(
    name = "sample_service_eventuals_generated",
    testonly = True,
    srcs = ["sample_service.proto"],
    deps = [":sample_service_proto"],
)

cc_library(
    name = "sample_service_eventuals",
    testonly = True,
    srcs = ["sample_service_eventuals_generated"],
    copts = copts(),
    deps = [
        ":sample_service_grpc",
        "//eventuals/grpc",
    ],
)

# Make sure that generated eventuals-wrapped service code at leasts builds.
# TODO(alexmc, benh): verify correctness as well as compilability.
build_test(
    name = "sample_service_eventuals_build_test",
    targets = [":sample_service_eventuals"],
)
