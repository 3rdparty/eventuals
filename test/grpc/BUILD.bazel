load("@rules_cc//cc:defs.bzl", "cc_binary", "cc_library", "cc_test")
load("//bazel:copts.bzl", "copts")

cc_library(
    name = "death-constants",
    hdrs = ["death-constants.h"],
)

cc_binary(
    name = "death-client",
    srcs = [
        "death-client.cc",
    ],
    copts = copts(),
    deps = [
        ":death-constants",
        "//eventuals/grpc",
        "@com_github_grpc_grpc//examples/protos:helloworld_cc_grpc",
    ],
)

cc_binary(
    name = "death-server",
    srcs = [
        "death-server.cc",
    ],
    copts = copts(),
    deps = [
        ":death-constants",
        "//eventuals/grpc",
        "@com_github_grpc_grpc//examples/protos:helloworld_cc_grpc",
    ],
)

cc_test(
    name = "grpc",
    timeout = "short",
    # TODO(alexmc): Some of these filenames end with "-test" and others don't.
    # Rename things for consistency.
    srcs = [
        "accept.cc",
        "build-and-start.cc",
        "cancelled-by-client.cc",
        "cancelled-by-server.cc",
        "client-death-test.cc",
        "deadline.cc",
        "greeter-server.cc",
        "helloworld.eventuals.cc",
        "helloworld.eventuals.h",
        "main.cc",
        "multiple-hosts.cc",
        "server-death-test.cc",
        "server-unavailable.cc",
        "streaming.cc",
        "test.h",
        "unary.cc",
        "unimplemented.cc",
    ],
    copts = copts(),
    data = [
        ":death-client",
        ":death-server",
    ],
    # This test is fairly fast, but our GitHub Action Runner compiles with
    # -c dbg --config=asan (~1s per test) and runs it 100x which often hits
    # the default "short" timeout without sharding.
    shard_count = 5,
    # TODO(benh): resolve build issues on Windows and then remove
    # these 'target_compatible_with' constraints.
    target_compatible_with = select({
        "@platforms//os:linux": [],
        "@platforms//os:macos": [],
        "//conditions:default": ["@platforms//:incompatible"],
    }),
    deps = [
        ":death-constants",
        "//eventuals/grpc",
        "//test:expect-throw-what",
        "@bazel_tools//tools/cpp/runfiles",
        "@com_github_google_googletest//:gtest",
        "@com_github_grpc_grpc//examples/protos:helloworld_cc_grpc",
        "@com_github_grpc_grpc//examples/protos:keyvaluestore",
    ],
)
