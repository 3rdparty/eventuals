workspace(name = "com_github_3rdparty_eventuals_grpc")

########################################################################

# NOTE: we pull in 'eventuals' as a local repository pointing to the git
# submodule that we have so that we can do do more efficient
# development between the two repositories. We'll remove this for
# releases!
local_repository(
    name = "com_github_3rdparty_eventuals",
    path = "submodules/eventuals"
)

load("@com_github_3rdparty_eventuals//bazel:repos.bzl", eventuals_repos = "repos")
eventuals_repos(external = False)

########################################################################

load("//bazel:repos.bzl", "repos")
repos(external = False)

load("//bazel:deps.bzl", "deps")
deps()

load("@com_github_grpc_grpc//bazel:grpc_extra_deps.bzl", "grpc_extra_deps")
grpc_extra_deps()

########################################################################

# Need Python rules in order to use protos from grpc examples in the
# tests.
#
# NOTE: we include these here rather than in deps.bzl because:
#
#   (1) We can't easily do that with the current grpc Bazel situation
#       (deps, extra_deps, etc).
#
#   (2) They're only used for tests and we assume those depending on
#       eventuals-grpc don't need to build the tests.

load("@io_bazel_rules_python//python:pip.bzl", "pip_import", "pip_repositories")

pip_import(
    name = "grpc_python_dependencies",
    requirements = "@com_github_grpc_grpc//:requirements.bazel.txt",
)

load("@grpc_python_dependencies//:requirements.bzl", "pip_install")

pip_repositories()

pip_install()

########################################################################
