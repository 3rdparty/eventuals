load("@rules_cc//cc:defs.bzl", "cc_library")
load("//bazel:copts.bzl", "copts")

cc_library(
    name = "base",
    srcs = [
        "scheduler.cc",
        "static-thread-pool.cc",
    ],
    hdrs = [
        "builder.hh",
        "callback.hh",
        "catch.hh",
        "closure.hh",
        "collect.hh",
        "compose.hh",
        "concurrent.hh",
        "concurrent-ordered.hh",
        "conditional.hh",
        "control-loop.hh",
        "do-all.hh",
        "eventual.hh",
        "executor.hh",
        "expected.hh",
        "filter.hh",
        "finally.hh",
        "flat-map.hh",
        "foreach.hh",
        "generator.hh",
        "head.hh",
        "if.hh",
        "interrupt.hh",
        "iterate.hh",
        "just.hh",
        "lazy.hh",
        "let.hh",
        "lock.hh",
        "loop.hh",
        "map.hh",
        "notification.hh",
        "on-begin.hh",
        "on-ended.hh",
        "os.hh",
        "pipe.hh",
        "poll.hh",
        "raise.hh",
        "range.hh",
        "reduce.hh",
        "repeat.hh",
        "request-response-channel.hh",
        "scheduler.hh",
        "semaphore.hh",
        "sequence.hh",
        "static-thread-pool.hh",
        "stream.hh",
        "take.hh",
        "task.hh",
        "terminal.hh",
        "then.hh",
        "transformer.hh",
        "type-check.hh",
        "type-erased-stream.hh",
        "type-traits.hh",
        "undefined.hh",
        "unpack.hh",
        "until.hh",
    ],
    copts = copts(),
    deps = [
        "@com_github_3rdparty_stout//:stout",
        "@com_github_google_glog//:glog",
        "@com_github_tl_expected//:expected",
    ],
)

cc_library(
    name = "events",
    srcs = [
        "event-loop.cc",
    ],
    hdrs = [
        "dns-resolver.hh",
        "event-loop.hh",
        "filesystem.hh",
        "signal.hh",
        "timer.hh",
    ],
    copts = copts(),
    deps = [
        ":base",
        "@com_github_chriskohlhoff_asio//:asio",
        "@com_github_libuv_libuv//:libuv",
    ],
)

cc_library(
    name = "http",
    srcs = [
        "http.cc",
    ],
    hdrs = [
        "http.hh",
        "rsa.hh",
        "x509.hh",
    ],
    copts = copts(),
    defines = [
        # Windows build fails without this define.
        "GLOG_NO_ABBREVIATED_SEVERITIES",
    ],
    # Gives the error "undefined symbol: curl_global_init" if False.
    # Default is False.
    linkstatic = True,
    deps = [
        ":base",
        ":events",
        "@com_github_curl_curl//:libcurl_boringssl",
    ],
)

cc_library(
    name = "promisify",
    hdrs = [
        "promisify.hh",
    ],
    copts = copts(),
    visibility = ["//visibility:public"],
    deps = [
        ":base",
        ":events",
        "@com_github_3rdparty_stout//:stout",
    ],
)

cc_library(
    name = "eventuals",
    copts = copts(),
    visibility = ["//visibility:public"],
    deps = [
        ":base",
        ":events",
        ":http",
        ":promisify",
        "@com_github_3rdparty_stout//:stout",
    ],
)
