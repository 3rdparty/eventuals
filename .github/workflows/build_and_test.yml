# Workflow for building and testing eventuals on macOS, Ubuntu and Windows.
name: Build and Run all tests

# We use action's triggers 'push' and 'pull_request'.
# The strategy is the following: this action will be
# triggered on any push to 'main' branch and any pull
# request to any branch. Thus we avoid duplicate work-
# flows.
on:
  push:
    branches:
      - "main"
      - "bulat.add-remote-cache"
    paths-ignore:
      - "**.md"
  pull_request:
    paths-ignore:
      - "**.md"

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
#          - os: macos-latest
#            sudo-command: "sudo"
#            # The macos runner doesn't have `docker` installed, so can't run
#            # `dazel`. Fall back to `bazel`.
#            bazel-command: "bazel"
#            bazel-config: ""
          - os: ubuntu-latest
            sudo-command: "sudo"
            bazel-command: "dazel"
            bazel-config: "--config=asan"
#          - os: windows-2019
#            sudo-command: "" # The Windows runner already runs as root.
#            # Our `dazel` container is based on `ubuntu:latest`, which doesn't
#            # support running on the `windows/amd64` platform. Fall back to
#            # `bazel`.
#            bazel-command: "bazel"
#            bazel-config: ""

    defaults:
      run:
        shell: bash

    env:
      GOOGLE_APPLICATION_CREDENTIALS: /tmp/service_account_credentials.json
      GOOGLE_REMOTE_CACHE: https://storage.googleapis.com/reboot-dev-eventuals-remote-cache

    steps:
      # Checkout the repository under $GITHUB_WORKSPACE.
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"

      - name: Set up remote cache credentials (1)
        uses: jsdaniell/create-json@1.1.2
        with:
          name: "service_account_credentials.json"
          json: ${{ secrets.GCP_GITHUB_INFRA_REMOTE_CACHE_CREDENTIALS }}

      - name: Set up remote cache credentials (2)
        run: mv ./service_account_credentials.json $GOOGLE_APPLICATION_CREDENTIALS

      # Install Dazel, so that we use the same build tooling in our Actions as
      # we do on our workstations.
      - name: Install Dazel
        run: ${{ matrix.sudo-command }} pip3 install dazel

      - name: Build
        run: |
          ${{ matrix.bazel-command }} build \
            ${{ matrix.bazel-config }} \
            --spawn_strategy=local \
            -c dbg \
            --strip="never" \
            --remote_cache=https://storage.googleapis.com/reboot-dev-eventuals-remote-cache \
            --google_credentials=/tmp/service_account_credentials.json \
            :eventuals

      - name: Test
        run: |
          ${{ matrix.bazel-command }} test \
            ${{ matrix.bazel-config }} \
            --experimental_ui_max_stdouterr_bytes=-1 \
            --spawn_strategy=local \
            -c dbg \
            --strip="never" \
            --test_output=errors \
            test:eventuals \
            --test_arg=--gtest_shuffle \
            --test_arg=--gtest_repeat=100

#      - name: Debug using tmate (if failure)
#        if: ${{ failure() }}
#        uses: mxschmitt/action-tmate@v3
